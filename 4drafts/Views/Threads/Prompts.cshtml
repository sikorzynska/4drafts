@model PaginatedList<ThreadsBrowseModel>
@{
    ViewBag.Title = "Writing Prompts";
    var user = await this.userManager.GetUserAsync(User);
    var userId = user == null ? null : user.Id;
    var avatar = "";
    var act = "prompts";
}

<div class="container-fluid">
    <div class="jumbotron jumbotron-fluid bg-ocean-circles">
        <div class="container">
            <h1 class="display-3 strokeme">@ViewBag.Title</h1>
        </div>
    </div>
    <div class="row ml-1">
        <input class="d-none" id="sort-value" value="@Model.SortType" />
        <input class="d-none" id="act" value="@act" />
        <div class="form-group">
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <i class="fal fa-sort"></i>
                    </div>
                </div>
                <select onchange="addFilterRoutes('@act')" id="sort-select" class="selectpicker form-control" title="Sort">
                    <option id="best" value="best" data-icon="fal fa-rocket">Best</option>
                    <option id="new" value="new" data-icon="fal fa-clock">New</option>
                    <option id="controversial" value="controversial" data-icon="fal fa-fire">Controversial</option>
                </select>
            </div>
        </div>
        <div class="form-group ml-1">
            <a id="filter" class="btn btn-primary form-control"><i class="fal fa-filter"></i> Filter</a>
        </div>
        <img src="~/images/pointthis.png" alt="point this" class="pointthis" id="pointthis" />
    </div>
    <table class="table table-hover">
        <tbody class="gray-stripes">
            @{
                foreach (var thread in Model)
                {
                    avatar = String.IsNullOrWhiteSpace(thread.AuthorAvatarUrl) ? "https://image.flaticon.com/icons/png/512/64/64572.png" : thread.AuthorAvatarUrl;
                    <tr>
                        <td class="border">
                            <span class="text-muted">Posted by <a class="btn-link text-muted" onclick="popUp('/Users/Peek/','peek-profile', null, '@thread.AuthorName')">@thread.AuthorName</a> <i class="fal fa-arrow-alt-right"></i> <a class="btn-link text-muted">@thread.CreatedOn</a></span>
                            <div class="mt-2 mb-2">
                                <span class="badge-pill badge-dark">WRITING PROMPT</span>
                                <a class="btn-link" asp-controller="Threads" asp-action="Read" asp-route-t="@thread.Id">
                                    @thread.Content
                                </a>
                            </div>
                            <div>
                                <span class="text-muted"><i class="fal fa-star"></i>&nbsp;<span>@thread.Points Points</span></span>&nbsp;
                                <span class="text-muted"><i class="fal fa-comment-alt"></i>&nbsp;<span>@thread.CommentCount Comments</span></span>&nbsp;
                                <span class="text-muted"><i class="fal fa-reply-all"></i>&nbsp;<span>@thread.Responses Responses</span></span>&nbsp;
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
@{
    var prevDisabled = !Model.PreviousPage ? "disabled" : "";
    var nextDisabled = !Model.NextPage ? "disabled" : "";
}
<div class="container w-100">
    <div class="text-center">
        <a asp-controller="Threads" asp-action="Prompts" asp-route-sort="@Model.SortType"
           asp-route-page="1"
           class="btn btn-secondary @prevDisabled">
            <i class="fas fa-angle-double-left"></i>
        </a>
        <a asp-controller="Threads" asp-action="Prompts" asp-route-sort="@Model.SortType"
           asp-route-page="@(Model.PageIndex - 1)"
           class="btn btn-secondary @prevDisabled">
            <i class="fas fa-angle-left"></i>
        </a>

        @{
            for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (i == Model.PageIndex)
                {
                    <a class="btn btn-secondary disabled">@i</a>
                }
                else
                {
                    <a asp-controller="Threads" asp-action="Prompts" asp-route-sort="@Model.SortType"
                       asp-route-page="@i" class="btn btn-secondary">
                        @i
                    </a>
                }
            }
        }
        <a asp-controller="Threads" asp-action="Prompts" asp-route-sort="@Model.SortType"
           asp-route-page="@(Model.PageIndex + 1)"
           class="btn btn-secondary @nextDisabled">
            <i class="fas fa-angle-right"></i>
        </a>
        <a asp-controller="Threads" asp-action="Prompts" asp-route-sort="@Model.SortType"
           asp-route-page="@Model.TotalPages"
           class="btn btn-secondary @nextDisabled">
            <i class="fas fa-angle-double-right"></i>
        </a>
    </div>
</div>

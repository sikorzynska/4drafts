@model PaginatedList<ThreadsBrowseModel>
@{
    var user = await this.userManager.GetUserAsync(User);
    var userId = user == null ? null : user.Id;
    var avatar = "";
    var heart = "";
    //comment
}

<table class="table table-hover separate-border">
    <tbody class="gray-stripes">
        <tr>
            <td class="border-black bg-secondary text-center">
                <input type="hidden" class="d-none invisible" id="is_liked" value="@Model.Liked.ToString()" />
                <input type="hidden" class="d-none invisible" id="is_u" value="@Model.Author" />
                <button class="btn btn-outline-dark" type="button" data-toggle="collapse" data-target="#filter-collapse" aria-expanded="false" aria-controls="collapseExample">
                    FILTERING & SORTING <i class="fas fa-list"></i>
                </button>
                <div class="collapse" id="filter-collapse">
                    <div class="container pt-4">
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text border-black edges">
                                        <i class="fas fa-sort"></i>
                                    </div>
                                </div>
                                <select onchange="addFilterRoutes()" id="sort-select" class="selectpicker form-control border-black edges" title="Sort">
                                    @{
                                        if (Model.SortType == "best")
                                        {
                                            <option id="best" selected value="best" data-icon="fas fa-rocket">Best</option>
                                        }
                                        else
                                        {
                                            <option id="best" value="best" data-icon="fas fa-rocket">Best</option>
                                        }
                                        if (Model.SortType == "new")
                                        {
                                            <option id="new" selected value="new" data-icon="fas fa-clock">New</option>
                                        }
                                        else
                                        {
                                            <option id="new" value="new" data-icon="fas fa-clock">New</option>
                                        }
                                        if (Model.SortType == "controversial")
                                        {
                                            <option id="controversial" selected value="controversial" data-icon="fas fa-fire">Controversial</option>
                                        }
                                        else
                                        {
                                            <option id="controversial" value="controversial" data-icon="fas fa-fire">Controversial</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text border-black edges">
                                        <i class="fas fa-clone"></i>
                                    </div>
                                </div>
                                <select onchange="addFilterRoutes()" id="type-select" class="selectpicker form-control border-black edges" title="Type">
                                    <option data-icon="fas fa-times" value="0">All Types</option>
                                    @{
                                        if (Model.Type == 1)
                                        {
                                            <option id="1type" selected data-icon="fas fa-book" value="1">Story</option>
                                        }
                                        else
                                        {
                                            <option id="1type" data-icon="fas fa-book" value="1">Story</option>
                                        }

                                        if (Model.Type == 2)
                                        {
                                            <option id="2type" selected data-icon="fas fa-scroll" value="2">Poem</option>
                                        }
                                        else
                                        {
                                            <option id="2type" data-icon="fas fa-scroll" value="2">Poem</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text border-black edges">
                                        <i class="fas fa-folder-open"></i>
                                    </div>
                                </div>
                                <select onchange="addFilterRoutes()" data-live-search="true" id="genre-select" class="selectpicker form-control border-black edges" title="Genre">
                                    <option value="0" data-icon="fas fa-times">All Genres</option>
                                    <optgroup label="Stories">
                                        @foreach (var genre in Model.Genres.Where(g => g.GenreType == 1))
                                        {
                                            if(Model.Genre == genre.Id)
                                            {
                                                <option id="@(genre.Id)genre" selected value="@genre.Id">@genre.Name</option>
                                            }
                                            else
                                            {
                                                <option id="@(genre.Id)genre" value="@genre.Id">@genre.Name</option>
                                            }
                                        }
                                    </optgroup>
                                    <optgroup label="Poems">
                                        @foreach (var genre in Model.Genres.Where(g => g.GenreType == 2))
                                        {
                                            if (Model.Genre == genre.Id)
                                            {
                                                <option id="@(genre.Id)genre" selected value="@genre.Id">@genre.Name</option>
                                            }
                                            else
                                            {
                                                <option id="@(genre.Id)genre" value="@genre.Id">@genre.Name</option>
                                            }
                                        }
                                    </optgroup>
                                </select>
                            </div>
                        </div>
                        <div class="form-group d-block">
                            <a id="filter" class="btn btn-block btn-outline-dark"><i class="fas fa-filter"></i> FILTER</a>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
        @{ if (Model.Any())
            {
                foreach (var thread in Model)
                {
                    heart = thread.Liked ? "fas text-danger" : "far";
                    avatar = String.IsNullOrWhiteSpace(thread.AuthorAvatarUrl) ? "https://image.flaticon.com/icons/png/512/64/64572.png" : thread.AuthorAvatarUrl;
                    switch (thread.ThreadTypeId)
                    {
                        case 1:
                            {
                                <tr>
                                    <td class="border-black p-0">
                                        <div class="pt-3 pl-3 pr-3">
                                            <span class="text-muted mr-1">Posted by <a class="btn-link text-muted" onclick="popUp('/Users/Peek/','peek-profile', null, '@thread.AuthorName')">@thread.AuthorName</a> <i class="fas fa-caret-right"></i> <a tabindex="0" data-placement="top" role="button" data-toggle="popover" data-trigger="focus" data-content="@thread.FullDate" class="btn-link text-muted">@thread.CreatedOn</a></span>
                                            @if (thread.Genres != null)
                                            {
                                                foreach (var genre in thread.Genres)
                                                {
                                                    <a tabindex="0" class="badge badge-secondary border-black" data-placement="top" role="button" data-toggle="popover" data-trigger="focus" data-content="@genre.Description">@genre.Name</a>
                                                }
                                            }
                                        </div>
                                        <hr />
                                        <div class="pb-2 pt-2 pl-3 pr-3">
                                            <span class="badge-pill badge-info">STORY</span>
                                            <a class="btn-link d-inline" asp-controller="Threads" asp-action="Read" asp-route-t="@thread.Id">
                                                @thread.Title
                                            </a>
                                        </div>
                                        <hr />
                                        <div class="pb-3 pl-3 pr-3">
                                            @if (userId != null)
                                            {
                                                <a onclick="likeThread('@thread.Id', true)" class="btn-link"><i id="heart@(thread.Id)" class="@heart fa-lg fa-heart"></i></a><span> @thread.Points</span>
                                            }
                                            else
                                            {
                                                <a onclick="popUp('/Authentication/Login/', 'auth', '@Context.Request.GetDisplayUrl()')" class="btn-link"><i id="heart@(thread.Id)" class="@heart fa-lg fa-heart"></i></a><span> @thread.Points</span>
                                            }
                                            &nbsp; &nbsp;
                                            <a asp-controller="Threads" asp-action="Read" asp-route-t="@thread.Id" class="btn-link"><i class="far fa-lg fa-comment-alt"></i></a><span> @thread.CommentCount</span>&nbsp;&nbsp;
                                            <a class="btn-link"><i class="fas fa-lg fa-share-alt"></i> Share</a>&nbsp;&nbsp;
                                            <a class="btn-link"><i class="fas fa-lg fa-flag"></i> Report</a>&nbsp;&nbsp;
                                        </div>
                                    </td>
                                </tr>
                                break;
                            }
                        case 2:
                            {
                                <tr>
                                    <td class="border-black p-0">
                                        <div class="pt-3 pl-3 pr-3">
                                            <span class="text-muted mr-1">Posted by <a class="btn-link text-muted" onclick="popUp('/Users/Peek/','peek-profile', null, '@thread.AuthorName')">@thread.AuthorName</a> <i class="fas fa-caret-right"></i> <a tabindex="0" data-placement="top" role="button" data-toggle="popover" data-trigger="focus" data-content="@thread.FullDate" class="btn-link text-muted">@thread.CreatedOn</a></span>
                                            @if (thread.Genres != null)
                                            {
                                                foreach (var genre in thread.Genres)
                                                {
                                                    <a tabindex="0" class="badge badge-secondary border-black" data-placement="top" role="button" data-toggle="popover" data-trigger="focus" data-content="@genre.Description">@genre.Name</a>
                                                }
                                            }
                                        </div>
                                        <hr />
                                        <div class="pb-2 pt-2 pl-3 pr-3">
                                            <span class="badge-pill badge-info">POEM</span>
                                            <a class="btn-link d-inline" asp-controller="Threads" asp-action="Read" asp-route-t="@thread.Id">
                                                @thread.Title
                                            </a>
                                        </div>
                                        <hr />
                                        <div class="pb-3 pl-3 pr-3">
                                            @if (userId != null)
                                            {
                                                <a onclick="likeThread('@thread.Id', true)" class="btn-link"><i id="heart@(thread.Id)" class="@heart fa-lg fa-heart"></i></a><span> @thread.Points</span>
                                            }
                                            else
                                            {
                                                <a onclick="popUp('/Authentication/Login/', 'auth', '@Context.Request.GetDisplayUrl()')" class="btn-link"><i id="heart@(thread.Id)" class="@heart fa-lg fa-heart"></i></a><span> @thread.Points</span>
                                            }
                                            &nbsp; &nbsp;
                                            <a asp-controller="Threads" asp-action="Read" asp-route-t="@thread.Id" class="btn-link"><i class="far fa-lg fa-comment-alt"></i></a><span> @thread.CommentCount</span>&nbsp;&nbsp;
                                            <a class="btn-link"><i class="fas fa-lg fa-share-alt"></i> Share</a>&nbsp;&nbsp;
                                            <a class="btn-link"><i class="fas fa-lg fa-flag"></i> Report</a>&nbsp;&nbsp;
                                        </div>
                                    </td>
                                </tr>
                                break;
                            }
                        default:
                            break;
                    }
                }
            }
            else
            {
                <tr>
                    <td class="border-black text-center">
                        <h4 class="p-3 mt-auto mb-auto">Looks like there's no results...</h4>
                    </td>
                </tr>
            }

        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.PreviousPage ? "disabled" : "";
    var nextDisabled = !Model.NextPage ? "disabled" : "";
}
<div class="container w-100">
        <ul class="pagination justify-content-center">
            <li class="page-item @prevDisabled">
                <a asp-controller="threads" asp-action="browse"
                   asp-route-genre="@Model.Genre" asp-route-sort="@Model.SortType"
                   asp-route-type="@Model.Type" asp-route-page="1"
                   asp-route-u="@Model.Author" asp-route-liked="@Model.Liked"
                   class="page-link">
                    <i class="fas fa-angle-double-left"></i>
                </a>
            </li>
            <li class="page-item @prevDisabled">
                <a asp-controller="threads" asp-action="browse"
                   asp-route-genre="@Model.Genre" asp-route-sort="@Model.SortType"
                   asp-route-type="@Model.Type" asp-route-page="@(Model.PageIndex - 1)"
                   asp-route-u="@Model.Author" asp-route-liked="@Model.Liked"
                   class="page-link">
                    <i class="fas fa-angle-left"></i>
                </a>
            </li>
            @{
                for (int i = 1; i <= Model.TotalPages; i++)
                {
                    if (i == Model.PageIndex)
                    {
                        <li class="page-item active">
                            <a class="page-link">@i</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a asp-controller="threads" asp-action="browse"
                               asp-route-genre="@Model.Genre" asp-route-sort="@Model.SortType"
                               asp-route-type="@Model.Type" asp-route-page="@i"
                               asp-route-u="@Model.Author" asp-route-liked="@Model.Liked"
                               class="page-link">
                                @i
                            </a>
                        </li>
                    }
                }
            }
        <li class="page-item @nextDisabled">
            <a asp-controller="threads" asp-action="browse"
               asp-route-genre="@Model.Genre" asp-route-sort="@Model.SortType"
               asp-route-type="@Model.Type" asp-route-page="@(Model.PageIndex + 1)"
               asp-route-u="@Model.Author" asp-route-liked="@Model.Liked"
               class="page-link">
                <i class="fas fa-angle-right"></i>
            </a>
        </li>
            <li class="page-item @nextDisabled">
                <a asp-controller="threads" asp-action="browse"
                   asp-route-genre="@Model.Genre" asp-route-sort="@Model.SortType"
                   asp-route-type="@Model.Type" asp-route-page="@Model.TotalPages"
                   asp-route-u="@Model.Author" asp-route-liked="@Model.Liked"
                   class="page-link">
                    <i class="fas fa-angle-double-right"></i>
                </a>
            </li>
        </ul>
</div>

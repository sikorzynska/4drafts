@model PaginatedList<ThreadsBrowseModel>
@{
    var user = await this.userManager.GetUserAsync(User);
    var userId = user == null ? null : user.Id;
    var avatar = "";
}

<div class="row ml-1">
    <input class="d-none" id="genre-value" value="@Model.Genre" />
    <input class="d-none" id="sort-value" value="@Model.SortType" />
    <div class="form-group mr-1">
        <div class="input-group">
            <div class="input-group-prepend">
                <div class="input-group-text">
                    <i class="fas fa-folder-open"></i>
                </div>
            </div>
            <select onchange="addFilterRoutes()" id="genre-select" class="selectpicker form-control" title="Genre">
                <option value="0" data-icon="fas fa-times">Default</option>
                @foreach (var genre in Model.Genres)
                {
                    <option id="@(genre.Id)genre" value="@genre.Id">@genre.Name</option>
                }


            </select>
        </div>
    </div>
    <div class="form-group mr-1">
        <div class="input-group">
            <div class="input-group-prepend">
                <div class="input-group-text">
                    <i class="fas fa-sort"></i>
                </div>
            </div>
            <select onchange="addFilterRoutes()" id="sort-select" class="selectpicker form-control" title="Sort">
                <option data-icon="fas fa-times" )>Default</option>
                <option id="popular" value="popular" data-icon="fas fa-rocket">Popular</option>
                <option id="controversial" value="controversial" data-icon="fas fa-fire">Controversial</option>
                <option id="liked" value="liked" data-icon="fas fa-heart">Likes (Desc.)</option>
                <option id="disliked" value="disliked" data-icon="far fa-heart">Likes (Asc.)</option>
                <option id="newest" value="newest" data-icon="fas fa-clock">Date (Newest)</option>
                <option id="oldest" value="oldest" data-icon="far fa-clock">Date (Oldest)</option>
            </select>
        </div>
    </div>
    <div class="form-group">
        <a id="filter" class="btn btn-primary form-control disabled"><i class="fas fa-filter"></i> Filter</a>
    </div>
    <img src="~/images/pointthis.png" alt="pointthis" class="pointthis" id="pointthis" />
</div>

<table id="threadTable" class="table table-hover border table-fixed">
    <thead class="bg-tablehead">
        <tr>
            <th class="text-truncate border" scope="col" style="width: 165px;">Genre</th>
            <th class="text-truncate border" scope="col">Title</th>
            <th class="text-truncate border" scope="col" style="width: 165px;">Posted</th>
            <th class="text-truncate border text-center" scope="col" style="width: 75px;">Likes</th>
            <th class="text-truncate border text-center" scope="col" style="width: 75px;">Replies</th>
            <th class="text-truncate border" scope="col" style="width: 165px;">Author</th>
        </tr>
    </thead>
    <tbody>
        @{
            if (Model.Any())
            {
                foreach (var thread in Model)
                {
                    avatar = String.IsNullOrWhiteSpace(thread.AuthorAvatarUrl) ? "https://image.flaticon.com/icons/png/512/64/64572.png" : thread.AuthorAvatarUrl;
                    if (userId == thread.AuthorId)
                    {
                        <tr class="table-light" id="@thread.Id">
                            <td class="border">
                                @foreach (var genreName in thread.GenresSimplified)
                                {
                                    <span class="badge badge-info"><a class="btn-link">[@genreName]</a></span>
                                }
                            </td>
                            <th class="border"><a asp-controller="Threads" asp-action="Read" asp-route-t="@thread.Id" class="d-block text-truncate btn-link"><strong>@thread.Title</strong></a></th>
                            <td class="text-truncate border">@thread.CreatedOn</td>
                            <td class="border text-center">@thread.Points</td>
                            <td class="border text-center">@thread.CommentCount</td>
                            <td class="text-truncate border">
                                <div class="d-inline media-img-30">
                                    <a onclick="peekProfile('@thread.AuthorName')" class="btn-link">
                                        <img class="rounded-circle border" src="@avatar" />
                                        @thread.AuthorName
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr class="table-secondary" id="@thread.Id">
                            <td class="border">
                                @foreach (var genreName in thread.GenresSimplified)
                                {
                                    <span class="badge badge-info"><a class="btn-link">[@genreName]</a></span>
                                }
                            </td>
                            <th class="border"><a asp-controller="Threads" asp-action="Read" asp-route-t="@thread.Id" class="d-block text-truncate btn-link"><strong>@thread.Title</strong></a></th>
                            <td class="text-truncate border">@thread.CreatedOn</td>
                            <td class="border text-center">@thread.Points</td>
                            <td class="border text-center">@thread.CommentCount</td>
                            <td class="text-truncate border">
                                <div class="d-inline media-img-30">
                                    <a class="btn-link" onclick="peekProfile('@thread.AuthorName')">
                                        <img class="rounded-circle border" src="@avatar" />
                                        @thread.AuthorName
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                }
            }
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.PreviousPage ? "disabled" : "";
    var nextDisabled = !Model.NextPage ? "disabled" : "";
}
<div class="container w-100">
    <div class="text-center">
        <a asp-controller="Threads" asp-action="Browse" asp-route-genre="@Model.Genre" asp-route-sort="@Model.SortType" asp-route-page="1"
           class="btn btn-secondary @prevDisabled">
            <i class="fas fa-angle-double-left"></i>
        </a>
        <a asp-controller="Threads" asp-action="Browse" asp-route-genre="@Model.Genre" asp-route-sort="@Model.SortType" asp-route-page="@(Model.PageIndex - 1)"
           class="btn btn-secondary @prevDisabled">
            <i class="fas fa-angle-left"></i>
        </a>

        @{
            for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (i == Model.PageIndex)
                {
                    <a class="btn btn-secondary disabled">@i</a>
                }
                else
                {
                    <a asp-controller="Threads" asp-action="Browse" asp-route-genre="@Model.Genre" asp-route-sort="@Model.SortType" asp-route-page="@i" class="btn btn-secondary">
                        @i
                    </a>
                }
            }
        }
        <a asp-controller="Threads" asp-action="Browse" asp-route-genre="@Model.Genre" asp-route-sort="@Model.SortType" asp-route-page="@(Model.PageIndex + 1)"
           class="btn btn-secondary @nextDisabled">
            <i class="fas fa-angle-right"></i>
        </a>
        <a asp-controller="Threads" asp-action="Browse" asp-route-genre="@Model.Genre" asp-route-sort="@Model.SortType" asp-route-page="@Model.TotalPages"
           class="btn btn-secondary @nextDisabled">
            <i class="fas fa-angle-double-right"></i>
        </a>
    </div>
</div>

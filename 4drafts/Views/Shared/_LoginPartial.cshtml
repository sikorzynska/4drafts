@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{ 
    var user = await this.UserManager.GetUserAsync(User);
}

<ul class="navbar-nav">
    @if (user != null)
    {
        <li class="dropdown">
            <a class="dropdown-toggle media-img-30 btn-link layout-anchor" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><img src="@user.AvatarUrl" alt="Avatar" /> <span class="caret">@user.UserName</span></a>
            <ul class="dropdown-menu">
                <li><a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><span class="dropdown-link-text"><i class="fas fa-user-alt"></i> Profile</span></a></li>
                <li role="separator" class="dropdown-divider"></li>
                <li><a asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })"><span class="dropdown-link-text"><i class="fas fa-sign-out-alt"></i> Logout</span></a></li>
            </ul>
        </li>
    }
    else
    {
<li>
    <a asp-area="Identity" asp-page="/Account/Login" class="btn-link"><i class="user-icon fas fa-user-circle"></i><span> Sign In</span></a>
</li>
    }
</ul>

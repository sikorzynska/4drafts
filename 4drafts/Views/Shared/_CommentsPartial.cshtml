@model ThreadViewModel
@{
    var user = await this.userManager.GetUserAsync(User);
    var avatar = "";
    var userId = user == null ? null : user.Id;
    if (user != null) avatar = String.IsNullOrWhiteSpace(user.AvatarUrl) ? "https://image.flaticon.com/icons/png/512/64/64572.png" : user.AvatarUrl;
    else avatar = "https://image.flaticon.com/icons/png/512/64/64572.png";
}
<div class="p-2 px-4">
    <span class="badge badge-dark">@Model.Comments.Count()</span>&nbsp;<span>Comments</span>
    <div class="dropdown d-inline ml-3">
        <a class="dropdown-toggle btn-link" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><i class="fas fa-filter"></i><span> [sort]</span></a>
        <ul class="dropdown-menu">
            <li class="dropdown-link-text d-block"><a onclick="sort('@Model.Id', 'top')" class="btn-link" href="#"><i class="fas fa-sort-amount-up"></i><span> [top]</span> </a></li>
            <li class="dropdown-link-text d-block"><a onclick="sort('@Model.Id', 'oldest')" class="btn-link" href="#"><i class="fas fa-sort-numeric-up-alt"></i><span> [oldest]</span> </a></li>
            <li class="dropdown-link-text d-block"><a onclick="sort('@Model.Id', 'newest')" class="btn-link" href="#"><i class="fas fa-sort-numeric-down-alt"></i><span> [newest]</span> </a></li>
        </ul>
    </div>
    <div class="mt-2">
        <div class="p-2 col-md-12">
            @{
                if (user != null)
                {
                    <div class="d-flex flex-row align-items-start media-img-40">
                        <img class="rounded-circle border" src="@avatar">
                        <textarea type="text" rows="1"
                                  style="resize: none;"
                                  maxlength="500"
                                  class="form-control ml-1 shadow-none"
                                  placeholder="Add a public comment..."
                                  id="comment-content"
                                  onchange="checkIfEmpty(), countCharacters('comment_count', 'comment-content')"
                                  onkeypress="checkIfEmpty(), countCharacters('comment_count', 'comment-content')"
                                  oninput="checkIfEmpty(), countCharacters('comment_count', 'comment-content')"
                                  onkeyup="countCharacters('comment_count', 'comment-content')"
                                  onpaste="checkIfEmpty(), countCharacters('comment_count', 'comment-content')"
                                  onclick="showButtons()"></textarea>
                        <div class="input-group-append d-none" id="counter-append">
                            <span class="input-group-text" id="comment_count">0 / 500</span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="d-flex flex-row align-items-start media-img-40">
                        <img class="rounded-circle border" src="@avatar">
                        <textarea type="text" rows="1"
                                  style="resize: none;"
                                  maxlength="500"
                                  class="form-control ml-1 shadow-none"
                                  placeholder="Sign in to add a public comment..."
                                  disabled="disabled"></textarea>
                    </div>
                }
            }
            <div class="mt-2 text-right d-none" id="comment-buttons">
                <a class="btn btn-primary disabled" id="comment-button" onclick="comment('@Model.Id', getValue('comment-content'))">
                    Comment
                </a>
                <a class="btn btn-danger ml-1" id="cancel" onclick="hideButtons()">
                    Cancel
                </a>
            </div>
        </div>
    </div>
    @{
        if (Model.Comments.Any())
        {
            <hr />
            <div class="container-fluid mt-3">
                @foreach (var comment in Model.Comments)
                {
                    var authorAvatar = "";
                    authorAvatar = String.IsNullOrWhiteSpace(comment.AuthorAvatarUrl) ? "https://image.flaticon.com/icons/png/512/64/64572.png" : comment.AuthorAvatarUrl;
                    <div class="commented-section mt-3">
                        <div class="d-flex flex-row align-items-center commented-user media-img-30">
                            <img class="rounded-circle border" src="@authorAvatar">
                            <h5 class="mr-2 mt-2 ml-1 d-inline"><a class="btn-link" onclick="viewProfile('@comment.AuthorId')">@comment.AuthorName</a></h5>
                            <span class="dot"></span><span class="text-muted ml-2">@comment.CreatedOn</span>
                            <div class="comment-options ml-auto mr-0">
                                @if (userId != null)
                                {
                                    <a class="btn-link ml-2"><i class="fas fa-reply"></i> [reply]</a>
                                    <a class="btn-link d-inline ml-2"><i class="fas fa-flag"></i> [flag]</a>
                                    @if (userId == comment.AuthorId)
                                    {
                                        <a onclick="editPopup('@comment.Id', '/Comments/Edit/')" class="btn-link d-inline ml-2"><i class="fas fa-pencil-alt"></i> [edit]</a>
                                        <a onclick="deletePopup('@comment.Id', '/Comments/Delete/')" class="btn-link d-inline ml-2"><i class="fas fa-trash"></i> [delete]</a>
                                    }
                                }
                            </div>
                        </div>
                        <p class="comment-text mt-1 mb-1">@comment.Content</p>
                        <div class="reply-section ml-1">
                            <div class="d-flex flex-row align-items-center">
                                @{
                                    if (user != null)
                                    {
                                        if (comment.Liked)
                                        {
                                            <a class="text-danger" onclick="likeComment('@comment.Id')"><i class="fas fa-heart"></i></a>
                                        }
                                        else
                                        {
                                            <a class="text-danger" onclick="likeComment('@comment.Id')"><i class="far fa-heart"></i></a>
                                        }

                                    }
                                    else
                                    {
                                        <a class="text-secondary disabled"><i class="far fa-heart"></i></a>
                                    }
                                }
                                <span class="badge-pill badge-info ml-2">@comment.Points likes</span>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    }
</div>
@model ThreadViewModel
@{
    var user = await this.userManager.GetUserAsync(User);
    var avatar = "";
    if (user != null) avatar = String.IsNullOrWhiteSpace(user.AvatarUrl) ? "https://image.flaticon.com/icons/png/512/64/64572.png" : user.AvatarUrl;
    else avatar = "https://image.flaticon.com/icons/png/512/64/64572.png";
}
<div class="coment-bottom bg-white p-2 px-4">
    <div>
        <span class="badge badge-dark">@Model.Comments.Count()</span>&nbsp;<span>Comments</span>
    </div>
    <div class="card mt-2">
        <div id="counter" class="d-none">
            <span class="badge badge-secondary float-right mt-2 mr-2" id="count_message"></span>
        </div>
        <div class="p-2 col-md-12">
            @{
                if (user != null)
                {
                    <div class="d-flex flex-row align-items-start media-img-40">
                        <img class="rounded-circle border" src="@avatar">
                        <textarea type="text" rows="1"
                                  style="resize: none;"
                                  maxlength="500"
                                  class="form-control ml-1 shadow-none"
                                  placeholder="Add a public comment..."
                                  id="comment-content"
                                  onchange="checkIfEmpty(), countCharacters()"
                                  onkeypress="checkIfEmpty(), countCharacters()"
                                  oninput="checkIfEmpty(), countCharacters()"
                                  onkeyup="countCharacters()"
                                  onpaste="checkIfEmpty(), countCharacters()"
                                  onclick="showButtons()"></textarea>
                    </div>
                }
                else
                {
                    <div class="d-flex flex-row align-items-start media-img-40">
                        <img class="rounded-circle border" src="@avatar">
                        <textarea type="text" rows="1"
                                  style="resize: none;"
                                  maxlength="500"
                                  class="form-control ml-1 shadow-none"
                                  placeholder="Sign in to add a public comment..."
                                  disabled="disabled"></textarea>
                    </div>
                }
            }
            <div class="mt-2 text-right d-none" id="comment-buttons">
                <button class="btn btn-primary" type="button" disabled id="comment-button" onclick="refreshComments('@Model.Id', getCommentValue())">
                    Comment
                </button>
                <button class="btn btn-danger ml-1" type="button" id="cancel" onclick="hideButtons()">
                    Cancel
                </button>
            </div>
        </div>
    </div>
    <hr />
    @{
        foreach (var comment in Model.Comments)
        {
            var authorAvatar = "";
            authorAvatar = String.IsNullOrWhiteSpace(comment.AuthorAvatarUrl) ? "https://image.flaticon.com/icons/png/512/64/64572.png" : comment.AuthorAvatarUrl;
            <div class="card mt-1">
                <div class="commented-section mt-2">
                    <div class="card-header">
                        <div class="media flex-wrap w-100 align-items-center media-img-40">
                            <img src="@authorAvatar" class="rounded-circle border">
                            <div class="media-body ml-3">
                                <a onclick="viewProfile('@Model.AuthorId')">@comment.AuthorName</a>
                                <div class="text-muted small">@comment.CreatedOn</div>
                            </div>
                            <div class="text-muted small ml-3">
                                <div>Member since <strong>@comment.AuthorRegisteredOn</strong></div>
                                <div><strong>@comment.AuthorCommentCount</strong> comments</div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body mh-50">
                        <span class="content-text">@comment.Content</span>
                    </div>
                    <div class="reply-section card-footer d-flex flex-wrap justify-content-start">
                        <div class="d-flex flex-row align-items-center voting-icons">
                            @{
                                if (user != null)
                                {
                                    if (comment.Liked)
                                    {
                                        <a onclick="likeComment('@comment.Id')" class="btn btn-primary btn-sm"><i class="fas fa-heart"></i></a>
                                    }
                                    else
                                    {
                                        <a onclick="likeComment('@comment.Id')" class="btn btn-info btn-sm"><i class="far fa-heart"></i></a>
                                    }

                                }
                                else
                                {
                                    <a class="btn btn-info btn-sm disabled"><i class="far fa-heart"></i></a>
                                }
                            }
                            <span class="ml-1 mr-1">@comment.Points <span class="text-muted">likes</span></span>
                        </div>
                        @if (user != null)
                        {
                            <div class="dropdown mw-min-content align-end">
                                <a class="dropdown-toggle media-img-30 btn btn-secondary layout-anchor" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><i class="fas fa-ellipsis-h"></i> Options</a>
                                <ul class="dropdown-menu">
                                    <li><a asp-controller="Comments" asp-action="Report" asp-route-commentId="@comment.Id"><span class="dropdown-link-text"><i class="fas fa-flag"></i> Report</span></a></li>
                                    @{
                                        if (user != null)
                                        {
                                            if (user.Id == comment.AuthorId)
                                            {
                                                <li role="separator" class="dropdown-divider"></li>
                                                <li><a onclick="editCommentInPopup('@comment.Id')"><span class="dropdown-link-text"><i class="fas fa-pencil-alt"></i> Edit</span></a></li>
                                                <li><a onclick="deleteCommentInPopup('@comment.Id')"><span class="dropdown-link-text"><i class="fas fa-trash-alt"></i> Delete</span></a></li>
                                            }
                                        }
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    }
</div>
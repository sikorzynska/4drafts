@model ThreadViewModel
@{
    var user = await this.userManager.GetUserAsync(User);
    var avatar = "";
    var userId = user == null ? null : user.Id;
    if (user != null) avatar = String.IsNullOrWhiteSpace(user.AvatarUrl) ? "https://image.flaticon.com/icons/png/512/64/64572.png" : user.AvatarUrl;
    else avatar = "https://image.flaticon.com/icons/png/512/64/64572.png";
}
<div class="bg-white p-2 px-4">
    <div>
        <span class="badge badge-dark">@Model.Comments.Count()</span>&nbsp;<span>Comments</span>
    </div>
    <div class="mt-2">
        <div class="p-2 col-md-12">
            @{
                if (user != null)
                {
                    <div class="d-flex flex-row align-items-start media-img-40">
                        <img class="rounded-circle border" src="@avatar">
                        <textarea type="text" rows="1"
                                  style="resize: none;"
                                  maxlength="500"
                                  class="form-control ml-1 shadow-none"
                                  placeholder="Add a public comment..."
                                  id="comment-content"
                                  onchange="checkIfEmpty(), countCharacters()"
                                  onkeypress="checkIfEmpty(), countCharacters()"
                                  oninput="checkIfEmpty(), countCharacters()"
                                  onkeyup="countCharacters()"
                                  onpaste="checkIfEmpty(), countCharacters()"
                                  onclick="showButtons()"></textarea>
                        <div class="input-group-append d-none" id="counter-append">
                            <span class="input-group-text" id="count_message">0 / 500</span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="d-flex flex-row align-items-start media-img-40">
                        <img class="rounded-circle border" src="@avatar">
                        <textarea type="text" rows="1"
                                  style="resize: none;"
                                  maxlength="500"
                                  class="form-control ml-1 shadow-none"
                                  placeholder="Sign in to add a public comment..."
                                  disabled="disabled"></textarea>
                    </div>
                }
            }
            <div class="mt-2 text-right d-none" id="comment-buttons">
                <button class="btn btn-primary" type="button" disabled id="comment-button" onclick="refreshComments('@Model.Id', getValue('comment-content'))">
                    Comment
                </button>
                <button class="btn btn-danger ml-1" type="button" id="cancel" onclick="hideButtons()">
                    Cancel
                </button>
            </div>
        </div>
    </div>
    @{
        if (Model.Comments.Any())
        {
            <hr />
        }
        foreach (var comment in Model.Comments)
        {
            var authorAvatar = "";
            authorAvatar = String.IsNullOrWhiteSpace(comment.AuthorAvatarUrl) ? "https://image.flaticon.com/icons/png/512/64/64572.png" : comment.AuthorAvatarUrl;
            <div class="commented-section mt-3">
                <div class="d-flex flex-row align-items-center commented-user media-img-30">
                    <img class="rounded-circle border" src="@authorAvatar">
                    <h5 class="ml-1 mt-2 mr-2"><a onclick="viewProfile('@comment.AuthorId')">@comment.AuthorName</a></h5><span class="dot mb-1"></span><span class="text-muted mb-1 ml-2">@comment.CreatedOn</span>
                </div>
                <div class="comment-text-sm"><span>@comment.Content</span></div>
                <div class="reply-section">
                    <div class="d-flex flex-row align-items-center voting-icons">
                        @{
                            if (user != null)
                            {
                                if (comment.Liked)
                                {
                                    <a onclick="likeComment('@comment.Id')"><i class="fas fa-heart"></i></a>
                                }
                                else
                                {
                                    <a onclick="likeComment('@comment.Id')"><i class="far fa-heart"></i></a>
                                }

                            }
                            else
                            {
                                <a><i class="far fa-heart"></i></a>
                            }
                        }
                        <span class="ml-2">@comment.Points</span><span class="dot mb-1 ml-2"></span>
                        <h6 class="ml-2 mt-1">Reply</h6>
                        @if (userId != null)
                        {
                            <a class="d-inline ml-2"><i class="fas fa-flag"></i></a>
                            @if (userId == comment.AuthorId)
                            {
                                <a onclick="editPopup('@comment.Id', '/Comments/Edit/')" class="d-inline ml-2"><i class="fas fa-pencil-alt"></i></a>
                                <a onclick="deletePopup('@comment.Id', '/Comments/Delete/')" class="d-inline ml-2"><i class="fas fa-trash-alt"></i></a>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    }
</div>
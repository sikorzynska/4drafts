@model ThreadViewModel
@{
    var user = await this.userManager.GetUserAsync(User);
    var avatar = "";
    var userId = user == null ? null : user.Id;
    if (user != null) avatar = String.IsNullOrWhiteSpace(user.AvatarUrl) ? "https://image.flaticon.com/icons/png/512/64/64572.png" : user.AvatarUrl;
    else avatar = "https://image.flaticon.com/icons/png/512/64/64572.png";
    //comment
}

<table class="w-100 table-fixed separate-border">
    <thead class="invisible">
        <tr>
            <th class="text-truncate w-10" scope="col"></th>
            <th class="text-truncate" scope="col"></th>
        </tr>
    </thead>
    <tbody>
        <tr id="comment-row" class="d-none">
            <td colspan="2">
                <div class="pt-2 pb-2">
                    @{
                        if (user != null)
                        {
                            <div class="d-flex flex-row align-items-start media-img-40">
                                <textarea type="text" rows="1"
                                          style="resize: none;"
                                          maxlength="2000"
                                          class="form-control ml-1 shadow-none border-black"
                                          placeholder="Add a public comment..."
                                          id="comment-content"
                                          onchange="checkIfEmpty(), countCharacters('comment_count', 'comment-content', 500)"
                                          onkeypress="checkIfEmpty(), countCharacters('comment_count', 'comment-content', 500)"
                                          oninput="checkIfEmpty(), countCharacters('comment_count', 'comment-content', 500)"
                                          onkeyup="countCharacters('comment_count', 'comment-content', 500)"
                                          onpaste="checkIfEmpty(), countCharacters('comment_count', 'comment-content', 500)"
                                          onclick="showButtons()"></textarea>
                                <div class="input-group-append" id="counter-append">
                                    <span class="input-group-text border-black" id="comment_count">0 / 500</span>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="d-flex flex-row align-items-start media-img-40">
                                <textarea type="text" rows="1"
                                          style="resize: none;"
                                          maxlength="500"
                                          class="form-control ml-1 shadow-none edges"
                                          placeholder="Sign in to add a public comment..."
                                          disabled="disabled"></textarea>
                            </div>
                        }
                    }
                    <div class="mt-2 text-right" id="comment-buttons">
                        <a class="btn btn-sm btn-outline-info d-none mr-2" id="comment-button" onclick="comment('@Model.Id', getValue('comment-content'))">
                            <i class="fas fa-check"></i> COMMENT
                        </a>
                        <a class="btn btn-sm btn-outline-dark" id="cancel" onclick="hideCommentRow()">
                            <i class="fas fa-times"></i> CANCEL
                        </a>
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <th colspan="2" class="border-black bg-gray">
                <div class="media flex-wrap w-100 align-items-center">
                    <h5 class="p-2 mt-2"><i class="far fa-comment-alt"></i> Comments (@Model.Comments.Count())</h5>
                </div>
            </th>
        </tr>
    </tbody>
</table>
@{
    if (Model.Comments.Any())
    {
        <div class="container-fluid mt-3">
            @foreach (var comment in Model.Comments)
            {
                var authorAvatar = "";
                authorAvatar = String.IsNullOrWhiteSpace(comment.AuthorAvatarUrl) ? "https://image.flaticon.com/icons/png/512/64/64572.png" : comment.AuthorAvatarUrl;
                <div class="mt-3">
                    <div class="d-flex flex-row align-items-center commented-user media-img-40">
                        <img class="rounded-circle" src="@authorAvatar">
                        <h5 class="mr-2 mt-2 ml-1 d-inline"><a class="btn-link" onclick="popUp('/Users/Peek/','peek-profile', null, '@comment.AuthorName')">@comment.AuthorName</a></h5>
                        <i class="fas fa-caret-right"></i><span class="text-muted ml-2">@comment.CreatedOn</span>
                        <div>
                            @if (userId == comment.AuthorId)
                            {
                                <a onclick="popUp('/Comments/Edit/','comment-edit', null, '@comment.Id')" class="btn-link pl-2"><i class="fas fa-pencil-alt"></i></a>
                                <a onclick="deletePopup('@comment.Id', '/Comments/Delete/')" class="btn-link pl-2"><i class="fas fa-trash"></i></a>
                            }
                        </div>
                    </div>
                    <div class="pl-1 pr-1 pt-1 pb-1" style="white-space: pre-wrap;">@comment.Content</div>
                    <div class="reply-section ml-1">
                        <div class="d-flex flex-row align-items-center">
                            @{
                                var liked = comment.Liked == true ? "fas" : "far";
                                if (user != null)
                                {
                                    <a class="text-danger" onclick="likeComment('@comment.Id')"><i class="@liked fa-heart"></i></a>
                                    <span class="ml-2">@comment.Points</span>
                                }
                                else
                                {
                                    <a onclick="popUp('/Authentication/Login/', 'auth', '@Context.Request.GetDisplayUrl()')" class="text-danger"><i class="far fa-heart"></i></a>
                                    <span class="ml-2">@comment.Points</span>
                                }
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
}